cex.lab = 1.5,cex.axis=1.5, cex.main = 1.5,xlim = xlimit,ylim=ylimit)
legend("topright",c("ALL","Normal"),fill=c("red","blue"))
source('~/Documents/Rcode/ALL_methy_mrna_co_analysis.R')
debugSource('~/Documents/Rcode/ALL_methy_mrna_co_analysis.R')
View(methy_mrna_data_all)
source('~/Documents/Rcode/ALL_methy_mrna_co_analysis.R')
source('~/Documents/Rcode/assign_gene_to_cpg_island.R')
genome(session) <- "mm10"
session <- browserSession()
genome(session) <- "mm10"
sessionInfo()
installr package
updateR()
source("https://bioconductor.org/biocLite.R")
biocLite("DNAcopy")
library(DNAcopy)
data(coriell)
CNA.object <- CNA(cbind(coriell$Coriell.05296),coriell$Chromosome,coriell$Position,data.type="logratio",sampleid="c05296")
View(CNA.object)
smoothed.CNA.object <- smooth.CNA(CNA.object)
View(smoothed.CNA.object)
cbbPalette <- c("#000000", "#999999", "#FFFFFF")
d <- data.frame(CpG=rep(1:10,4), read=rep(1:4, each=10), value=sample(c(1,2,3), 40, replace=T))
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="black",aes(fill=cbbPalette[value]))+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
library("ggplot2")
require(ggthemes)
cbbPalette <- c("#000000", "#999999", "#FFFFFF")
d <- data.frame(CpG=rep(1:10,4), read=rep(1:4, each=10), value=sample(c(1,2,3), 40, replace=T))
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="black",aes(fill=cbbPalette[value]))+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
cbbPalette <- c("#000000", "#999999", "#FFFFFF")
d <- data.frame(CpG=rep(1:10,4), read=rep(1:4, each=10), value=sample(c(1,2,3), 40, replace=T))
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="white",aes(fill=cbbPalette[value]))+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
cbbPalette <- c("#000000", "#999999", "#FFFFFF")
d <- data.frame(CpG=rep(1:10,4), read=rep(1:4, each=10), value=sample(c(1,2,3), 40, replace=T))
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="black",aes(fill=cbbPalette[value]))+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
d <- data.frame(CpG=rep(1:10,4), read=rep(1:4, each=10), value=sample(c(1,2,3), 40, replace=T))
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="black",aes(fill="white"))
+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="black",aes(fill="white"))+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="black",fill="white")+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
d <- data.frame(CpG=rep(1:10,4), read=rep(1:4, each=10), value=sample(c(1,2,3), 40, replace=T))
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="black",fill=aes(factor(value)))+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
cbbPalette <- c("#000000", "#999999", "#FFFFFF")
d <- data.frame(CpG=rep(1:10,4), read=rep(1:4, each=10), value=sample(c(1,2,3), 40, replace=T))
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="black",aes(fill=factor(value)))scale_fill_manual(values=cbbPalette)+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
cbbPalette <- c("#000000", "#999999", "#FFFFFF")
d <- data.frame(CpG=rep(1:10,4), read=rep(1:4, each=10), value=sample(c(1,2,3), 40, replace=T))
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="black",aes(fill=factor(value)))scale_fill_manual(values=cbbPalette)+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
cbbPalette <- c("#000000", "#999999", "#FFFFFF")
d <- data.frame(CpG=rep(1:10,4), read=rep(1:4, each=10), value=sample(c(1,2,3), 40, replace=T))
ggplot(d,aes(x=CpG, y=read))+geom_point(shape = 21,size=9,colour="black",aes(fill=factor(value)))+scale_fill_manual(values=cbbPalette)+scale_shape_identity() + coord_cartesian(ylim = c(0, 5))+ theme_igray()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
source('~/Desktop/test.R')
source("http://bioconductor.org/biocLite.R")
library(minfi)
library(GEOquery)
gse=getGEO("GSE41037")
gse=getGEO("GSE41037")
library(GEOquery)
gse=getGEO("GSE41037")
library(GEOquery);getGEO(filename="~/Downloads/GSE41037_series_matrix.txt")->gSet
library(GEOquery)
getGEO(filename="~/Downloads/GSE41037_series_matrix.txt")->gSet
getGEO(filename="~/Downloads/GSE41037_series_matrix.txt")->gSet
getGEO(filename="~/Downloads/GSE41037_series_matrix.txt")->gSet
getGEO(filename="~/Downloads/GSE41037_series_matrix.txt")->gSet
library(GEOquery)
getGEO(filename="~/Downloads/GSE41037_series_matrix.txt")->gSet
gse=getGEO(filename="~/Downloads/GSE41037_series_matrix.txt")
gse=getGEO("GSE41037")
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("FDb.InfiniumMethylation.hg19 ")
biocLite("FDb.InfiniumMethylation.hg19")
library(FDb.InfiniumMethylation.hg19)
hm450 <- get450k()
probenames <- c("cg16392865", "cg00395291", "cg09310185", "cg21749424")
probes <- hm450[probenames]
probes
probes[0]
probes[1]
probes
probes<-hm450["cg00003994"]
probes
df<-as.data.frame(probes)
View(df)
rm(probes)
df<-as.data.frame(hm450)
View(df)
View(df)
rm(df)
?get
example("get")
objects()
rm(e1)
rm(e1)
objects()
example("objects")
?objects
ls()
.Ob <- 1
ls(pattern = "O")
ls(pattern= "O", all.names = TRUE)
myfunc <- function() {ls()}
myfunc()
myfunc <- function() {y <- 1; ls()}
myfunc()
rm(myfunc)
source("http://www.bioconductor.org/biocLite.R")
biocLite("BitSeq")
biocLite("BitSeq")
library(BitSeq)
library(biomaRt)
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
df <- read.csv("/Users/Ren/Downloads/GSE87195_rnaseq_ensT_all.csv", header=TRUE)
View(df)
gene_ids <- df$X
View(df)
gene_ids[1:10]
G_list <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id","hgnc_symbol", "description"),values=gene_ids,mart= mart)
View(G_list)
G_list <- getBM(filters= "ensembl_transcript_id", attributes= c("ensembl_transcript_id","ensembl_gene_id","hgnc_symbol", "description"),values=gene_ids,mart= mart)
View(G_list)
View(G_list)
View(df)
View(G_list)
merged_df<-merge(df,G_list,by.x="X",by.y="ensembl_transcript_id")
View(merged_df)
View(merged_df)
View(df)
View(df)
mean_transc_exp<- rowMeans(df[,2:14])
df<-cbind(df,mean_transc_exp)
View(df)
merged_df<-merge(df,G_list,by.x="X",by.y="ensembl_transcript_id")
View(merged_df)
library(dplyr)
View(merged_df)
rm(merged_df)
merged_df<-merge(df,G_list,by.x="X",by.y="ensembl_transcript_id")
rm(mean_transc_exp)
View(merged_df)
library(data.table)
DT <- as.data.table(merged_df)
install.packages(data.table)
install.packages('data.table')
library(data.table)
dt_merged_df<-as.data.table(merged_df)
View(G_list)
View(dt_merged_df)
filt<-dt_merged_df[dt_merged_df$mean_transc_exp==min(dt_merged_df$mean_transc_exp),by = dt_merged_df$ensembl_gene_id]
attach(dt_merged_df)
filt<-dt_merged_df[mean_transc_exp==min(mean_transc_exp),by = ensembl_gene_id]
attach(dt_merged_df)
filt<-dt_merged_df[mean_transc_exp==min(mean_transc_exp),,by = ensembl_gene_id]
filt<-dt_merged_df[mean_transc_exp=min(mean_transc_exp),,by = ensembl_gene_id]
filt<-dt_merged_df[mean_transc_exp==min(mean_transc_exp),,by = ensembl_gene_id]
filt<-dt_merged_df[mean_transc_exp==min(mean_transc_exp),]
View(filt)
filt<-dt_merged_df[mean_transc_exp==max(mean_transc_exp),]
View(filt)
View(filt)
filt<-dt_merged_df[mean_transc_exp==max(mean_transc_exp),,by='ensembl_gene_id']
filt<-dt_merged_df[mean_transc_exp==max(mean_transc_exp),,by=list(ensembl_gene_id)]
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
df <- read.csv("/Users/Ren/Downloads/GSE87195_rnaseq_ensT_all.csv", header=TRUE)
gene_ids <- df$X
mean_transc_exp<- rowMeans(df[,2:14])
df<-cbind(df,mean_transc_exp)
G_list <- getBM(filters= "ensembl_transcript_id", attributes= c("ensembl_transcript_id","ensembl_gene_id","hgnc_symbol", "description"),values=gene_ids,mart= mart)
merged_df<-merge(df,G_list,by.x="X",by.y="ensembl_transcript_id")
library(data.table)
dt_merged_df<-as.data.table(merged_df)
View(dt_merged_df)
filt<-dt_merged_df[mean_transc_exp==max(mean_transc_exp),1:17,by=list(ensembl_gene_id)]
View(filt)
filt<-dt_merged_df[mean_transc_exp==max(mean_transc_exp),1:17,by=ensembl_gene_id]
filt<-dt_merged_df[,1:17,by=ensembl_gene_id]
View(filt)
View(filt)
filt<-dt_merged_df[,1:17,by='ensembl_gene_id']
View(filt)
filt<-dt_merged_df[,1:17,by=dt_merged_df$ensembl_gene_id]
View(filt)
View(df)
filt<-dt_merged_df[,max(mean_transc_exp),by=ensembl_gene_id]
View(filt)
filt<-dt_merged_df[,c(ensembl_transcript_id,max(mean_transc_exp)),by=ensembl_gene_id]
attach(dt_merged_df)
filt<-dt_merged_df[,c(ensembl_transcript_id,max(mean_transc_exp)),by=ensembl_gene_id]
filt<-dt_merged_df[,c(ensembl_transcript_id,max(mean_transc_exp)),by=ensembl_gene_id]
filt<-dt_merged_df[,c(dt_merged_df$ensembl_transcript_id,max(mean_transc_exp)),by=ensembl_gene_id]
View(filt)
View(filt)
View(filt)
detach(dt_merged_df)
ts<-dt_merged_df[c(dt_merged_df$ensembl_gene_id==filt$ensembl_gene_id,dt_merged_df$mean_transc_exp==filt$V1),]
ts<-dt_merged_df[dt_merged_df$mean_transc_exp==filt$V1,]
View(ts)
rm(ts)
View(merged_df)
View(merged_df)
merged_df2<-merge(merged_df,filt,by.x=c("ensembl_gene_id","mean_transc_exp"),by.y=c("ensembl_transcript_id","mean_transc_exp"))
attach(dt_merged_df)
filt<-dt_merged_df[,c(1,max(mean_transc_exp)),by=ensembl_gene_id]
detach(dt_merged_df)
View(filt)
attach(dt_merged_df)
filt<-dt_merged_df[,c(ensembl_transcript_id,max(mean_transc_exp)),by=ensembl_gene_id]
detach(dt_merged_df)
filt<-dt_merged_df[,c(dt_merged_df$ensembl_transcript_id,max(mean_transc_exp)),by=ensembl_gene_id]
View(filt)
filt<-dt_merged_df[,c(dt_merged_df$ensembl_transcript_id,max(mean_transc_exp),by=ensembl_gene_id)]
test<-merged_df[!duplicated(merged_df$ensembl_gene_id), ]
View(test)
filt<-dt_merged_df[,max(mean_transc_exp),by=ensembl_gene_id]
View(filt)
View(test)
View(filt)
rm(dt_merged_df)
rm(filt)
rm(test)
View(merged_df)
View(merged_df)
ordered_df<-merged_df[order(merged_df[[16]],-merged_df[[15]]),]
View(ordered_df)
test<-ordered_df[!duplicated(ordered_df$ensembl_gene_id), ]
View(test)
filt<-dt_merged_df[,max(mean_transc_exp),by=ensembl_gene_id]
library(data.table)
dt_merged_df<-as.data.table(merged_df)
attach(dt_merged_df)
filt<-dt_merged_df[,max(mean_transc_exp),by=ensembl_gene_id]
detach(dt_merged_df)
View(filt)
View(ordered_df)
View(test)
rm(filt)
rm(test)
max_expr_by_gene<-ordered_df[!duplicated(ordered_df$ensembl_gene_id), ]
rm(ordered_df)
merged_df<-merged_df[order(merged_df[[16]],-merged_df[[15]]),]
max_expr_by_gene<-merged_df[!duplicated(merged_df$ensembl_gene_id), ]
View(max_expr_by_gene)
library("DESeq2")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
library(DESeq2)
View(max_expr_by_gene)
View(merged_df)
max_expr_by_gene<-merged_df[!duplicated(merged_df$ensembl_gene_id), c(16,2:14)]
View(max_expr_by_gene)
library(pasilla)
source("https://bioconductor.org/biocLite.R")
biocLite("pasilla")
library(pasilla)
data(pasillaGenes)
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq")
data(pasillaGenes)
exprSet=counts(pasillaGenes)
View(exprSet)
group_list=pasillaGenes$condition
group_list
View(max_expr_by_gene)
View(exprSet)
View(max_expr_by_gene)
View(max_expr_by_gene)
cell_corsp<-c("CLP","GMP","HSC","HSCbm","MLP0","MLP1","MLP2","MLP3","MPP","CMP","GMP","MLP1","MPP")
donor<-c(rep(1,10),rep(2,4))
View(max_expr_by_gene)
cell_corsp
donor<-c(rep(1,9),rep(2,4))
View(max_expr_by_gene)
cell<-as.factor(cell_corsp)
cell
donor_corsp<-c(rep(1,9),rep(2,4))
donor<-as.factor(donor_corsp)
donor
View(max_expr_by_gene)
View(exprSet)
View(max_expr_by_gene)
rownames(max_expr_by_gene)<-max_expr_by_gene[,1]
View(max_expr_by_gene)
max_expr_by_gene<-max_expr_by_gene[,-1]
View(max_expr_by_gene)
colData <- data.frame(row.names=colnames(exprSet), group_list=group_list)
View(colData)
colData
View(colData)
View(colData)
View(exprSet)
colData2 <- data.frame(row.names=colnames(max_expr_by_gene), group_list=cell+donor)
View(colData2)
colData2 <- data.frame(row.names=colnames(max_expr_by_gene), group_list=~cell+donor)
colData2 <- data.frame(row.names=colnames(max_expr_by_gene), group_list=list(cell,donor))
View(colData2)
View(colData)
View(colData2)
colData2 <- data.frame(row.names=colnames(max_expr_by_gene),col.names=c("cell","donor"), group_list=list(cell,donor))
colnames(colData2)<-c("cell","donor")
View(colData2)
View(max_expr_by_gene)
dds <- DESeqDataSetFromMatrix(countData = max_expr_by_gene,colData = colData2,design = ~ cell + donor)
dds2 <- DESeq(dds)
resultsNames(dds2)
res <-  results(dds2, contrast=c("group_list","cellCLP","cellGMP"))
View(colData2)
res <-  results(dds2, contrast=c("group_list","cell"))
View(colData2)
res <-  results(dds2, contrast=c("group_list","CLP","GMP"))
?results
cell_corsp<-c("CLP_D1","GMP_D1","HSC_D1","HSCbm_D1","MLP0_D1","MLP1_D1","MLP2_D1","MLP3_D1","MPP_D1","CMP_D2","GMP_D2","MLP1_D2","MPP_D2")
cell<-as.factor(cell_corsp)
View(colData2)
colData2 <- data.frame(row.names=colnames(max_expr_by_gene), group_list=cell)
View(colData2)
colnames(colData2)<-c("cell")
dds <- DESeqDataSetFromMatrix(countData = max_expr_by_gene,colData = colData2,design = ~ cell)
rm(dds)
rm(dds2)
dds <- DESeqDataSetFromMatrix(countData = max_expr_by_gene,colData = colData2,design = ~ cell)
dds2 <- DESeq(dds)
resultsNames(dds2)
res <-  results(dds2, contrast=c("group_list","CLP_D1","GMP_D1"))
View(colData2)
res <-  results(dds2, contrast=c("cell","CLP_D1","GMP_D1"))
resOrdered <- as.data.frame(res[order(res$padj),])
View(resOrdered)
res <-  results(dds2, contrast=c("cell","CLP_D1","GMP_D1","HSC_D1"))
lineage_corsp<-c("Lymphoid","Myeloid","Uncommitted","Uncommitted","Lymphoid","Lymphoid","Lymphoid","Lymphoid","Uncommitted","Myeloid","Myeloid","Lymphoid","Uncommitted")
lineage<-as.factor(lineage_corsp)
lineage
colData2 <- data.frame(row.names=colnames(max_expr_by_gene), group_list=lineage)
colnames(colData2)<-c("lineage")
dds <- DESeqDataSetFromMatrix(countData = max_expr_by_gene,colData = colData2,design = ~ lineage)
View(colData2)
dds2 <- DESeq(dds)
resultsNames(dds2)
res <-  results(dds2, contrast=c("lineage","Myeloid","Lymphoid"))
resOrdered <- as.data.frame(res[order(res$padj),])
View(resOrdered)
View(resOrdered)
res_filtered <- resOrdered[resOrdered$padj<0.05,]
View(res_filtered)
res_filtered <-na.omit(resOrdered[resOrdered$padj<0.05,])
View(res_filtered)
View(res_filtered)
View(res_filtered)
View(res_filtered)
res_filtered <-na.omit(resOrdered[(resOrdered$padj<0.05) & (abs(resOrdered$log2FoldChange > 1.0)),])
View(res_filtered)
res_filtered <-na.omit(resOrdered[(resOrdered$padj<0.05) & (resOrdered$log2FoldChange > 1.0 | resOrdered$log2FoldChange < -1.0),])
View(res_filtered)
View(max_expr_by_gene)
library("pheatmap")
install.packages("pheatmap")
library("pheatmap")
View(res_filtered)
diff_gene_ids<-rownames(res_filtered)
cell_corsp<-c("CLP","GMP","HSC","HSCbm","MLP0","MLP1","MLP2","MLP3","MPP","CMP","GMP","MLP1","MPP")
cell_type<-as.factor(cell_corsp)
rm(cell)
nt <- normTransform(dds2)
select <- order(rowMeans(counts(dds2,normalized=TRUE)),decreasing=TRUE)[1:1000]
View(max_expr_by_gene)
View(max_expr_by_gene)
select<-rownames(max_expr_by_gene)==diff_gene_ids
source("https://bioconductor.org/biocLite.R")
biocLite("RnBeads.hg38")
source("https://bioconductor.org/biocLite.R")
biocLite("RnBeads.hg38")
library(RnBeads.hg38)
library(RnBeads)
logger.start(fname=NA)
parallel.isEnabled()
parallel.setup(num.cores)
parallel.setup(num.cores)
parallel.isEnabled()
num.cores <- 2
parallel.setup(num.cores)
parallel.isEnabled()
install.packages(c("argparse","matrixStats","glmnet","e1071"))
source("https://bioconductor.org/biocLite.R")
biocLite("impute")
library(GenomicFeatures)
txdb <- makeTranscriptDbFromGFF("~/PycharmProjects/TCGA_Analyze/data/GRCh38/Homo_sapiens.GRCh38.90.gtf", format="gtf")
txdb <- makeTxDbFromGFF("~/PycharmProjects/TCGA_Analyze/data/GRCh38/Homo_sapiens.GRCh38.90.gtf", format="gtf")
genes <- genes(txdb)
data_path = "~/PycharmProjects/TCGA_Analyze/data/GRCh38/"
write.table(as.data.frame(genes)[,-4], file= data_path + "gene_bodys", col.names=F, sep="\t")
write.table(as.data.frame(genes)[,-4], file= paste(data_path, "gene_bodys.tsv"), col.names=F, sep="\t")
head(genes)
library(biomaRt)
mart<- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
gene_df <- as.data.frame(genes)
View(gene_df)
View(gene_df)
ensembl_ids<-genes[,6]
ensembl_ids<-genes[,5]
ensembl_ids<-gene_df[,6]
genes_table <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id", "external_gene_id", "description"), values= ensembl_ids, mart= mart)
?getBM
listAttributes(mart)
a_df<- as.data.frame(listAttributes(mart))
View(a_df)
genes_table <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id", "hgnc_symbol", "description"), values= ensembl_ids, mart= mart)
View(genes_table)
View(genes_table)
?merge
rm(a_df)
attributs_df<- as.data.frame(listAttributes(mart)) #list all available attributes
View(gene_df)
View(genes_table)
merged_gene_df<-merge(gene_df, genes_table, by.x="gene_id", by.y="ensembl_gene_id")
View(merged_gene_df)
View(genes_table)
View(merged_gene_df)
write.table(merged_gene_df[ ,1:7], file= paste(data_path, "human_gene_bodys.tsv"), col.names=F, sep="\t")
source('~/PycharmProjects/TCGA_Analyze/R_scripts/convert_ensembl_gene_id_to_gene_symbol.R')
source('~/PycharmProjects/TCGA_Analyze/R_scripts/convert_ensembl_gene_id_to_gene_symbol.R')
getwd()
source('~/PycharmProjects/TCGA_Analyze/R_scripts/convert_ensembl_gene_id_to_gene_symbol.R')
source('~/PycharmProjects/TCGA_Analyze/R_scripts/convert_ensembl_gene_id_to_gene_symbol.R')
View(genes)
source('~/PycharmProjects/TCGA_Analyze/R_scripts/convert_ensembl_gene_id_to_gene_symbol.R')
View(genes)
attributs_df<- as.data.frame(listAttributes(mart))
View(attributs_df)
gene_id_and_symbols <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id","hgnc_symbol"), values=genes[ , 0], mart= mart)
t<-genes[ , 0]
View(t)
View(genes)
t<-genes[ , 1]
gene_id_and_symbols <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id","hgnc_symbol"), values=genes[ , 1], mart= mart)
View(gene_id_and_symbols)
View(genes)
t<-as.character(genes[ , 1])
gene_id_and_symbols <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id","hgnc_symbol"), values=genes[ , 1], mart= mart)
View(gene_id_and_symbols)
library(GenomicFeatures)
data_path = "~/PycharmProjects/TCGA_Analyze/data/GRCh38/"
txdb <- makeTxDbFromGFF(data_path + "Homo_sapiens.GRCh38.90.gtf", format="gtf")
genes <- genes(txdb)
gene_df <- as.data.frame(genes)
ensembl_ids<-gene_df[,6]
rm(genes)
genes <- genes(txdb)
gene_df <- as.data.frame(genes)
ensembl_ids<-gene_df[,6]
cls
clear
txdb <- makeTxDbFromGFF(data_path + "Homo_sapiens.GRCh38.90.gtf", format="gtf")
genes <- genes(txdb)
txdb <- makeTxDbFromGFF(file.path(data_path, "Homo_sapiens.GRCh38.90.gtf"), format="gtf")
genes <- genes(txdb)
gene_df <- as.data.frame(genes)
ensembl_ids<-gene_df[,6]
library(GenomicFeatures)
data_path = "~/PycharmProjects/TCGA_Analyze/data/GRCh38"
txdb <- makeTxDbFromGFF(file.path(data_path, "Homo_sapiens.GRCh38.90.gtf"), format="gtf")
genes <- genes(txdb)
gene_df <- as.data.frame(genes)
ensembl_ids<-gene_df[,6]
library(GenomicFeatures)
data_path = "~/PycharmProjects/TCGA_Analyze/data/GRCh38"
txdb <- makeTxDbFromGFF(file.path(data_path, "Homo_sapiens.GRCh38.90.gtf"), format="gtf")
genes <- genes(txdb)
gene_df <- as.data.frame(genes)
ensembl_ids<-gene_df[,6]
library('biomaRt')
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
ensembl_gene_ids_path <-"../rna_dat/ensembl_gene_ids.txt"
gene_names <- read.csv(ensembl_gene_ids_path, header = FALSE)
gene_names<-as.character(gene_names[ , 1])
gene_id_and_symbols <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id","hgnc_symbol"), values=ensembl_ids, mart= mart)
View(gene_id_and_symbols)
library(GenomicFeatures)
data_path = "~/PycharmProjects/TCGA_Analyze/data/GRCh38"
txdb <- makeTxDbFromGFF(file.path(data_path, "gencode.v22.annotation.gtf"), format="gtf")
library(GenomicFeatures)
data_path = "~/PycharmProjects/TCGA_Analyze/data/GRCh38"
txdb <- makeTxDbFromGFF(file.path(data_path, "gencode.v22.annotation.gtf"), format="gtf")
genes <- genes(txdb)
gene_df <- as.data.frame(genes)
ensembl_ids<-gene_df[,6]
library('biomaRt')
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
ensembl_gene_ids_path <-"../rna_dat/ensembl_gene_ids.txt"
gene_names <- read.csv(ensembl_gene_ids_path, header = FALSE)
gene_names<-as.character(gene_names[ , 1])
gene_id_and_symbols <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id","hgnc_symbol"), values=ensembl_ids, mart= mart)
?useDataset
?useMart
listMarts
?listMarts
?listMarts()
listMarts()
View(gene_df)
?genes
rm(genes)
genes_entities <- genes(txdb, columns=c("gene_id","gene_name"))
genes_entities <- genes(txdb, columns=c("gene_id","exon_name"))
gene_df <- as.data.frame(genes)
gene_df <- as.data.frame(genes_entities)
View(gene_df)
genes_entities <- genes(txdb, columns=c("gene_id","tx_name"))
gene_df <- as.data.frame(genes_entities)
View(gene_df)
